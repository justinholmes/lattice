#!/bin/bash

set -e

if [ -z "$1" ]; then
    echo "Usage: $0 script-to-run-with-docker"
    exit 1
fi

if [ -z "$DOCKER_IMAGE" ]; then
    echo "DOCKER_IMAGE env var must be set"
    exit 1
fi

if [ "$PULL_DOCKER_IMAGE" != "false" ]; then
    docker pull $DOCKER_IMAGE
fi

command_with_args="$@"
echo "Running command with $@"

docker run -a stdout -a stderr -w $LATTICE_SRC_PATH \
  -v ${DOCKER_MOUNT_DIR-`pwd`}:$LATTICE_SRC_PATH \
  -e LATTICE_SRC_PATH \
  -e DRY_RUN \
  -e LATTICE_RELEASE_VERSION \
  -e LATTICE_WEBSITE_CLONE_URL \
  -e AWS_ACCESS_KEY_ID \
  -e AWS_SECRET_ACCESS_KEY \
  -e GO_REVISION_DIEGO_RELEASE \
  -e GO_FROM_REVISION_DIEGO_RELEASE \
  -e GO_TO_REVISION_DIEGO_RELEASE \
  -e GO_REVISION_CF_RELEASE_RUNTIME_PASSED \
  -e GO_FROM_REVISION_CF_RELEASE_RUNTIME_PASSED \
  -e GO_TO_REVISION_CF_RELEASE_RUNTIME_PASSED \
  -e GO_REVISION_LATTICE \
  -e GO_FROM_REVISION_LATTICE \
  -e GO_TO_REVISION_LATTICE \
  -e GO_TRIGGER_USER \
  -e GO_PIPELINE_LABEL \
  -e GO_PIPELINE_NAME \
  -e GO_STAGE_NAME \
  -e GO_JOB_NAME \
  $DOCKER_IMAGE \
  /bin/bash -c "$command_with_args"
